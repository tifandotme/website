@reference "../../globals.css";

/*
Inspirations:
https://github.com/victorelgersma/tailwind-typography-stylesheet/blob/main/style.css
https://github.com/shadcn/app-tailwind-v4/blob/main/app/globals.css

@tailwindcss/typography index.css:
https://gist.github.com/tifandotme/d90989a4e50be70d121af627e02584f9
*/

@layer components {
  .prose {
    /*
    --codeblock-title: 240 6% 92%;
    @media (prefers-color-scheme: dark) {
      --codeblock-title: 240 2% 12%;
    */

    --prose-body: var(--color-foreground);
    --prose-headings: oklch(27.47% 0.006 286);
    --prose-links: var(--color-foreground);
    --prose-bold: oklch(24.39% 0.005 286.02);
    --prose-counters: var(--color-neutral-700);
    --prose-bullets: var(--color-neutral-700);
    --prose-hr: var(--color-border);
    --prose-quotes: var(--color-foreground);
    --prose-quote-borders: var(--color-neutral-300);
    --prose-captions: var(--color-muted);
    --prose-th-borders: var(--color-neutral-400);
    --prose-td-borders: var(--color-neutral-400);
    --prose-code: var(--color-neutral-700);

    --prose-pre-bg: oklch(96.73% 0.0013 286.37);
    --prose-pre-line-highlight: oklch(92.09% 0.0027 286.35);

    @media (prefers-color-scheme: dark) {
      --prose-body: var(--color-foreground);
      --prose-headings: oklch(90.01% 0 0);
      --prose-links: var(--color-foreground);
      --prose-bold: oklch(93.89% 0 0);
      --prose-counters: var(--color-slate-400);
      --prose-bullets: var(--color-slate-400);
      --prose-hr: var(--color-border);
      --prose-quotes: var(--color-foreground);
      --prose-quote-borders: var(--color-slate-700);
      --prose-captions: var(--color-muted);
      --prose-th-borders: var(--color-slate-700);
      --prose-td-borders: var(--color-slate-700);
      --prose-code: var(--color-slate-400);

      --prose-pre-bg: oklch(21.38% 0.002 286.23);
      --prose-pre-line-highlight: oklch(26.71% 0.0028 286.21);
    }

    max-width: 65ch;
    color: var(--prose-body);
    font-size: 1rem;
    line-height: 1.75;

    :where(:not(.not-prose, .not-prose *)) {
      /* paragraph */
      &:where(p) {
        margin-bottom: 1.25em;
      }
      &:where([class~="lead"]) {
        color: var(--prose-bold);
        font-size: 1.25em;
        line-height: 1.6;
        margin-bottom: 1.2em;
      }

      /* footnotes */
      &:where(sup) {
        & > a {
          text-decoration: none;
          &::before {
            content: "[";
          }
          &::after {
            content: "]";
          }
        }
        color: var(--prose-bold);
        font-size: var(--text-sm);
      }

      /* links */
      &:where(a) {
        color: var(--prose-links);
        text-decoration: underline;
        font-weight: var(--font-weight-normal);
        text-underline-offset: 1px;
      }

      /* bold */
      &:where(strong) {
        color: var(--prose-bold);
        font-weight: var(--font-weight-semibold);
      }
      &:where(a strong) {
        color: inherit;
      }
      &:where(blockquote strong) {
        color: inherit;
      }
      &:where(thead th strong) {
        color: inherit;
      }

      /* list AND hr */
      &:where(ol) {
        list-style-type: decimal;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
        ol {
          list-style-type: lower-alpha;
        }
        ol ol {
          list-style-type: lower-roman;
        }
      }
      &:where(ol[type="A"]) {
        list-style-type: upper-alpha;
      }
      &:where(ol[type="a"]) {
        list-style-type: lower-alpha;
      }
      &:where(ol[type="A" s]) {
        list-style-type: upper-alpha;
      }
      &:where(ol[type="a" s]) {
        list-style-type: lower-alpha;
      }
      &:where(ol[type="I"]) {
        list-style-type: upper-roman;
      }
      &:where(ol[type="i"]) {
        list-style-type: lower-roman;
      }
      &:where(ol[type="I" s]) {
        list-style-type: upper-roman;
      }
      &:where(ol[type="i" s]) {
        list-style-type: lower-roman;
      }
      &:where(ol[type="1"]) {
        list-style-type: decimal;
      }
      &:where(ul) {
        list-style-type: disc;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
      }
      &:where(ol > li)::marker {
        font-weight: var(--font-weight-normal);
        color: var(--prose-counters);
      }
      &:where(ul > li)::marker {
        color: var(--prose-bullets);
      }
      &:where(ol > li) {
        padding-inline-start: 0.375em;
      }
      &:where(ul > li) {
        padding-inline-start: 0.375em;
      }
      &:where(li) {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
      }
      &:where(.prose > ul > li p) {
        /* margin-top: 0.75em; */
        margin-bottom: 0.75em;
      }
      /* &:where(.prose > ul > li > p:first-child) {
        margin-top: 1.25em;
      } */
      &:where(.prose > ul > li > p:last-child) {
        margin-bottom: 1.25em;
      }
      /* &:where(.prose > ol > li > p:first-child) {
        margin-top: 1.25em;
      } */
      &:where(.prose > ol > li > p:last-child) {
        margin-bottom: 1.25em;
      }
      &:where(ul ul, ul ol, ol ul, ol ol) {
        margin-bottom: 0.75em;
      }
      &:where(hr) {
        border-color: var(--prose-hr);
        border-top-width: 1;
        margin-top: 3em;
        margin-bottom: 3em;
      }
      &:where(*:not(h2, h3, h4):has(+ hr)),
      &:where(*:not(h2, h3, h4):has(+ ol)),
      &:where(*:not(h2, h3, h4):has(+ ul)) {
        margin-bottom: 0.5em !important;
      }

      /* task list */
      &:where(ul.contains-task-list) {
        list-style-type: none;
        padding-inline-start: unset;

        & input[type="checkbox"] {
          margin-right: 0.5em;
          padding-block: 0.25em;
        }
      }

      /* blockquote */
      &:where(blockquote) {
        font-weight: var(--font-weight-medium);
        font-style: italic;
        color: var(--prose-quotes);
        border-inline-start-width: 0.25rem;
        border-inline-start-color: var(--prose-quote-borders);
        quotes: "\201C" "\201D" "\2018" "\2019";
        margin-bottom: 1.6em;
        padding-inline-start: 1em;
      }
      /* &:where(blockquote p:first-of-type)::before {
        content: open-quote;
      }
      &:where(blockquote p:last-of-type)::after {
        content: close-quote;
      } */
      &:where(blockquote *:last-child) {
        margin-bottom: 0;
      }

      /* headings */
      &:where(h2)::before {
        display: block;
        margin-bottom: 1rem;
        height: 3px;
        width: 1.5rem;
        background: var(--color-foreground);
        content: "";
      }
      &:where(h2) {
        color: var(--prose-headings);
        font-family: var(--font-heading);
        font-size: var(--text-4xl);
        line-height: var(--text-4xl-line-height);
        letter-spacing: var(--tracking-wide);
        font-weight: var(--font-weight-normal);
        margin-top: 3rem;
        margin-bottom: 1.5rem;
      }
      &:where(h3) {
        color: var(--prose-headings);
        margin-top: 2em;
        margin-bottom: 1.5em;
        font-weight: var(--font-weight-semibold);
        font-size: var(--text-xl);
        line-height: var(--text-xl--line-height);
      }
      &:where(h4) {
        color: var(--prose-headings);
        font-weight: var(--font-weight-semibold);
        margin-top: 1.5em;
        margin-bottom: 1em;
        line-height: 1.5;
      }
      &:where(hr + *) {
        margin-top: 0;
      }
      &:where(h2 + *) {
        margin-top: 0;
      }
      &:where(h3 + *) {
        margin-top: 0;
      }
      &:where(h4 + *) {
        margin-top: 0;
      }

      /* keyboard */
      &:where(kbd) {
        font-weight: var(--font-weight-medium);
        font-family: var(--font-mono);
        color: var(--color-muted);
        box-shadow:
          0 0 0 1px oklch(var(--muted) / 30%),
          0 3px 0 oklch(var(--muted) / 30%);
        font-size: var(--text-sm);
        border-radius: 0.3125rem;
        padding-top: 0.1875em;
        padding-inline-end: 0.375em;
        padding-bottom: 0.1875em;
        padding-inline-start: 0.375em;
      }

      /* foldable */
      &:where(summary) {
        margin-left: -1em;
        margin-right: -1em;
        padding-left: 1em;
        padding-right: 1em;
        cursor: default;
        user-select: none;
        margin-bottom: 1em;
        &::marker {
          font-size: var(--text-sm);
        }
        &:hover {
          background-color: color-mix(
            in oklab,
            var(--color-muted-darker) 10%,
            transparent
          );
        }
      }

      /* table */
      &:where(table) {
        margin-top: 2em;
        margin-bottom: 2em;

        width: 100%;
        table-layout: auto;
        font-size: var(--text-sm);
        line-height: 1.7142857;

        grid-column: 1 / -1 !important;
      }
      &:where(*:has(+ table)) {
        margin-bottom: unset !important;
      }

      &:where(thead) {
        border-bottom-width: 1px;
        border-bottom-color: var(--prose-th-borders);
      }
      &:where(thead th) {
        color: var(--prose-headings);
        font-weight: var(--font-weight-bold);
        vertical-align: bottom;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
      }
      &:where(thead th:first-child) {
        padding-inline-start: 0;
      }
      &:where(thead th:last-child) {
        padding-inline-end: 0;
      }

      &:where(tbody tr) {
        border-bottom-width: 1px;
        border-bottom-color: var(--prose-td-borders);
      }
      &:where(tbody tr:last-child) {
        border-bottom-width: 0;
      }
      &:where(tbody td) {
        vertical-align: baseline;
      }
      &:where(tbody td, tfoot td) {
        padding-top: 0.5714286em;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
      }
      &:where(tbody td:first-child, tfoot td:first-child) {
        padding-inline-start: 0;
      }
      &:where(tbody td:last-child, tfoot td:last-child) {
        padding-inline-end: 0;
      }

      &:where(tfoot) {
        border-top-width: 1px;
        border-top-color: var(--prose-th-borders);
      }
      &:where(tfoot td) {
        vertical-align: top;
      }
      &:where(th, td) {
        text-align: start;
      }

      /* multimedia */
      &:where(figure),
      &:where(img),
      &:where(picture),
      &:where(video) {
        margin-top: 2em;
        margin-bottom: 2em;
      }
      &:where(*:has(+ figure)),
      &:where(*:has(+ img)),
      &:where(*:has(+ picture)),
      &:where(*:has(+ video)) {
        margin-bottom: unset !important;
      }
      &:where(figure > *) {
        margin-top: 0;
        margin-bottom: 0;
      }
      &:where(figcaption) {
        color: var(--prose-captions);
        font-size: var(--text-sm);
        line-height: 1.4285714;
        margin-top: 0.8571429em;
      }
      &:where(picture) {
        display: block;
      }
      &:where(picture > img) {
        margin-top: 0;
        margin-bottom: 0;
      }

      /* may be used for glosary, but idk what to do for now */
      &:where(dt) {
        color: var(--prose-headings);
        font-weight: var(--font-weight-semibold);
      }
      &:where(dl) {
        margin-bottom: 1.25em;
      }
      &:where(dd) {
        padding-inline-start: 1.625em;
      }

      /* first and last el */
      &:where(.prose > :first-child) {
        margin-top: 0;
      }
      &:where(.prose > :last-child) {
        margin-bottom: 0;
      }

      /* inline code*/
      &:where(code) {
        color: var(--prose-code);
        font-weight: var(--font-weight-semibold);
        font-size: var(--text-sm);
      }
      &:where(code)::before {
        content: "`";
        color: var(--prose-code);
      }
      &:where(code)::after {
        content: "`";
        color: var(--prose-code);
      }
      &:where(a code) {
        color: inherit;
      }
      &:where(h1 code) {
        color: inherit;
      }
      &:where(h2 code) {
        color: inherit;
        font-size: var(--text-sm);
      }
      &:where(h3 code) {
        color: inherit;
        font-size: 0.9em;
      }
      &:where(h4 code) {
        color: inherit;
      }
      &:where(blockquote code) {
        color: inherit;
      }
      &:where(thead th code) {
        color: inherit;
      }

      /* codeblock */
      &:where(div.pre-wrapper) {
        margin-block: calc(var(--spacing) * 5);
        margin-inline: calc(-1 * var(--post-padding));
      }
      &:where(pre) {
        background-color: var(--prose-pre-bg);
        overflow-x: auto;
        padding: var(--post-padding);

        font-weight: var(--font-weight-normal);
        font-size: var(--text-sm);
        line-height: calc(var(--spacing) * 5); /* 20px in GitHub web */
      }
      &:where(*:has(+ div.pre-wrapper)) {
        margin-bottom: unset !important;
      }
      /* so codeblock wont be affected by inline code styles */
      &:where(pre code) {
        background-color: transparent;
        border-width: 0;
        border-radius: 0;
        padding: 0;
        font-weight: inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
      }
      &:where(pre code)::before {
        content: none;
      }
      &:where(pre code)::after {
        content: none;
      }
    }
  }

  .shiki {
    & span {
      color: var(--shiki-light);
    }
    @media (prefers-color-scheme: dark) {
      & span {
        color: var(--shiki-dark);
      }
    }

    /* transformerMetaHighlight */
    & span.highlighted {
      background-color: var(--prose-pre-line-highlight);
      margin-inline: calc(-1 * var(--post-padding));
      padding-inline: var(--post-padding);
      width: calc(100% + calc(2 * var(--post-padding)));
      display: inline-block;
    }
  }
}
